{
	"version": "2",
	"templates": [
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A dead simple static HOMepage for your servER to keep your s ervices on hand, from a simple yaml configuration file.",
			"env": [
				{
					"default": "1000",
					"label": "GID",
					"name": "GID"
				},
				{
					"default": "1000",
					"label": "UID",
					"name": "UID"
				}
			],
			"image": "b4bz/homer:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homer.png",
			"name": "homer",
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/bastienwirtz/homer\" target=\"_blank\">https://github.com/bastienwirtz/homer</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/bastienwirtz/homer/blob/main/docs/configuration.md\" target=\"_blank\">https://github.com/bastienwirtz/homer/blob/main/docs/configuration.md</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=_d3J88ootYo&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=2\" target=\"_blank\">Installing and Configuring Homer Dashboard</a><br><br>This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
			"platform": "linux",
			"ports": [
				"8902:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Homer",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Homer/assets",
					"container": "/www/assets"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Homer",
					"container": "/www/config.yml"
				}
			]
		},
		{
			"categories": [
				"HomeAutomation"
			],
			"description": "Home Assistant is a free and open-source software for home automation that is designed to be the central control system for smart home devices with focus on local control and privacy.",
			"env": [
				{
					"default": "1000",
					"label": "GID",
					"name": "GID"
				},
				{
					"default": "1000",
					"label": "UID",
					"name": "UID"
				}
			],
			"image": "ghcr.io/home-assistant/home-assistant:stable",
			"logo": "https://github.com/home-assistant/home-assistant.io/raw/next/source/images/favicon-192x192-full.png",
			"name": "home-assistant",
			"platform": "linux",
			"privileged": true,
			"network_mode": "host",
			"restart_policy": "unless-stopped",
			"title": "home-assistant",
			"type": 1,
			"ports": [
				"8123:8123/tcp"
			],
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/HomeAssistant/assets",
					"container": "/config"
				},
				{
					"bind": "/etc/localtime",
					"container": "/etc/localtime"
				}
			],
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/homeassistant/config</p>"
		},
		{
			"categories": [
				"Video",
				"Music",
				"Photos"
			],
			"description": "Your favorite movies, TV, music, web shows, podcasts, and more, all streamed to your favorite screens.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "latest",
					"label": "VERSION",
					"name": "VERSION"
				}
			],
			"image": "linuxserver/plex:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/plex-icon.png",
			"name": "plex",
			"network": "host",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Plex",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Plex",
					"container": "/config"
				},
				{
					"bind": "/portainer/TV",
					"container": "/tv"
				},
				{
					"bind": "/portainer/Movies",
					"container": "/movies"
				}
			],
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.plex.tv/\" target=\"_blank\">https://www.plex.tv/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-plex\" target=\"_blank\">https://docs.linuxserver.io/images/docker-plex</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Eclipse Mosquitto is an open source implementation of a server for versions 5, 3.1.1, and 3.1 of the MQTT protocol.\r\nYou will need to create /portainer/Files/AppData/Config/Mosquitto/config/mosquitto.conf and if needed your password file.\r\nHave a look on https://mosquitto.org/man/mosquitto_passwd-1.html",
			"image": "eclipse-mosquitto:latest",
			"logo": "https://raw.githubusercontent.com/docker-library/docs/757578e3a44e5460a8a11d32a81776f8b74231a9/eclipse-mosquitto/logo.png",
			"name": "mosquitto",
			"platform": "linux",
			"ports": [
				"1883:1883/tcp",
				"9002:9001/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Eclipse Mosquitto",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Mosquitto/config",
					"container": "/mosquitto/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Mosquitto/data",
					"container": "/mosquitto/data"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Mosquitto/log",
					"container": "/mosquitto/log"
				}
			],
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/eclipse-mosquitto\" target=\"_blank\">https://hub.docker.com/_/eclipse-mosquitto</a><br><br><br>"
		},
		{
			"categories": [
				"Cloud",
				"Books"
			],
			"description": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.\n\n  [br][br]\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\n  [b]/config[/b] Where Calibre-web should store it's database[br]\n  [b]/books[/b] Path to your calibre library metadata.db file[br]",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"label": "GUAC_USER",
					"name": "GUAC_USER"
				},
				{
					"label": "GUAC_PASS",
					"name": "PASSWORD"
				},
				{
					"default": "",
					"label": "UMASK_SET",
					"name": "UMASK_SET"
				}
			],
			"image": "linuxserver/calibre-web:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/calibre-web-icon.png",
			"name": "calibre-web",
			"platform": "linux",
			"ports": [
				"8083:8083/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Calibre Web",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Books",
					"container": "/books"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Calibre-web",
					"container": "/config"
				}
			],
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://calibre-ebook.com/\" target=\"_blank\">https://calibre-ebook.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-calibre-web\" target=\"_blank\">https://docs.linuxserver.io/images/docker-calibre-web</a><br><br><br>"
		},
		{
			"categories": [
				"Cloud",
				"Books"
			],
			"description": "Calibre is a powerful and easy to use e-book manager. Users say it’s outstanding and a must-have. It’ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It’s also completely free and open source and great for both casual users and computer experts.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "/portainer/code/src",
					"label": "CALIBRE_DEVELOP_FROM",
					"name": "CALIBRE_DEVELOP_FROM"
				},
				{
					"default": "Europe/London",
					"description": "Specify a timezone to use for example EEurope/London",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"logo": "https://github.com/kovidgoyal/calibre/raw/master/resources/images/lt.png",
			"image": "linuxserver/calibre:arch",
			"name": "calibre",
			"platform": "linux",
			"ports": [
				"8098:8080/tcp",
				"8099:8081/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Calibre",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Movies/Development/Calibre",
					"container": "/code"
				},
				{
					"bind": "/portainer/Movies/Books/Calibre Library",
					"container": "/config/Calibre Library"
				},
				{
					"bind": "/portainer/Movies/Books",
					"container": "/books"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Calibre",
					"container": "/config"
				}
			],
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/calibre/config</p>"
		},
		{
			"categories": [
				"HomeAutomation"
			],
			"description": "Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
			"env": [
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1",
					"label": "HOMEBRIDGE_CONFIG_UI",
					"name": "HOMEBRIDGE_CONFIG_UI"
				},
				{
					"default": "8581",
					"label": "HOMEBRIDGE_CONFIG_UI_PORT",
					"name": "HOMEBRIDGE_CONFIG_UI_PORT"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "oznu/homebridge:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homebridge.png",
			"name": "homebridge",
			"network": "host",
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homebridge.io/\" target=\"_blank\">https://homebridge.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker\" target=\"_blank\">https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker</a><br><br><br>Bringing HomeKit support where there is none",
			"platform": "linux",
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "Homebridge",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/homebridge",
					"container": "/homebridge"
				}
			]
		},
		{
			"categories": [
				"HomeAutomation"
			],
			"description": "Debian Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
			"env": [
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1",
					"label": "HOMEBRIDGE_CONFIG_UI",
					"name": "HOMEBRIDGE_CONFIG_UI"
				},
				{
					"default": "8581",
					"label": "HOMEBRIDGE_CONFIG_UI_PORT",
					"name": "HOMEBRIDGE_CONFIG_UI_PORT"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "oznu/homebridge:debian-arm32v7",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homebridge.png",
			"name": "homebridge-debian",
			"network": "host",
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homebridge.io/\" target=\"_blank\">https://homebridge.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker\" target=\"_blank\">https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker</a><br><br><br>Bringing HomeKit support where there is none",
			"platform": "linux",
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "Homebridge - Debian",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/debian-homebridge",
					"container": "/homebridge"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Productivity",
				"Tools",
				"Other",
				"Web"
			],
			"description": "[Nextcloud](https://nextcloud.com/) gives you access to all your files wherever you are. Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.",
			"env": [
				{
					"default": "1024",
					"description": "for GroupID",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "100",
					"description": "for UserID",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "Europe/Amsterdam",
					"description": "Specify a timezone to use for example Europe/Amsterdam",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "linuxserver/nextcloud:latest",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png",
			"name": "Nextcloud",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nextcloud/config<br>mkdir -p /volume1/docker/nextcloud/data</p>",
			"platform": "linux",
			"ports": [
				"443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Nextcloud",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/nextcloud/config",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config/nextcloud/data",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Code-server is VS Code running on a remote server, accessible through the browser.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "GUID"
				},
				{
					"default": "Europe/London",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"label": "PASSWORD",
					"name": "PASSWORD"
				},
				{
					"label": "SUDO_PASSWORD",
					"name": "SUDO_PASSWORD"
				},
				{
					"default": "",
					"label": "PROXY_DOMAIN",
					"name": "PROXY_DOMAIN"
				}
			],
			"image": "linuxserver/code-server:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/code-server.png",
			"name": "code-server",
			"platform": "linux",
			"ports": [
				"8443:8443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Code Server",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Code-Server",
					"container": "/config"
				},
				{
					"bind": "/etc/localtime",
					"container": "/etc/localtime"
				}
			],
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://coder.com/\" target=\"_blank\">https://coder.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-code-server\" target=\"_blank\">https://docs.linuxserver.io/images/docker-code-server</a><br><br><br>"
		},
		{
			"categories": [
				"Downloaders",
				"Tools"
			],
			"description": "JDownloader docker image",
			"env": [
				{
					"default": "",
					"label": "MYJD_DEVICE_NAME",
					"name": "MYJD_DEVICE_NAME"
				},
				{
					"default": "",
					"label": "MYJD_USER",
					"name": "MYJD_USER"
				},
				{
					"default": "",
					"label": "MYJD_PASSWORD",
					"name": "MYJD_PASSWORD"
				}
			],
			"image": "jaymoulin/jdownloader:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/jdownloader.png",
			"name": "JDownloader",
			"platform": "linux",
			"ports": [
				"3129:3129/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "JDownloader",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/JDownloader",
					"container": "/opt/JDownloader/cfg"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/opt/JDownloader/Downloads"
				}
			],
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://my.jdownloader.org/\" target=\"_blank\">https://my.jdownloader.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/jaymoulin/docker-jdownloader\" target=\"_blank\">https://github.com/jaymoulin/docker-jdownloader</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=30MYRgCObu8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=4\" target=\"_blank\">Installing JDownloader and File Browser On The Pi Docker Server</a><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"command": "",
			"description": "Samba has provided secure, stable and fast file and print services for all clients using the SMB/CIFS protocol, such as all versions of DOS and Windows, OS/2, Linux and many others.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "1000",
					"label": "USERID",
					"name": "USERID"
				},
				{
					"default": "1000",
					"label": "GROUPID",
					"name": "GROUPID"
				},
				{
					"default": "guest;guest",
					"label": "USER",
					"name": "USER"
				},
				{
					"default": "true",
					"label": "PERMISSIONS",
					"name": "PERMISSIONS"
				},
				{
					"default": "portainer;/share;yes;no;yes;guest",
					"label": "SHARE",
					"name": "SHARE"
				}
			],
			"image": "dperson/samba:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/samba.png",
			"name": "Samba",
			"platform": "linux",
			"ports": [
				"139:139/tcp",
				"445:445/tcp"
			],
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "Samba",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Movies",
					"container": "/share"
				}
			],
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.samba.org/\" target=\"_blank\">https://www.samba.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/dperson/samba\" target=\"_blank\">https://github.com/dperson/samba</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=2zZ3_1GRWrM&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=11\" target=\"_blank\">Setting up Raspberry Pi Samba Server For File Sharing on Docker</a><br><br>"
		},
		{
			"categories": [
				"Tools",
				"Web",
				"Other"
			],
			"description": "Run a Speedtest every hour and graph the results.  See https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/tags for arch options",
			"env": [
				{
					"default": "latest-arm",
					"label": "arch",
					"name": "arch"
				},
				{
					"default": "true",
					"label": "OOKLA_EULA_GDPR",
					"name": "OOKLA_EULA_GDPR"
				}
			],
			"image": "henrywhitaker3/speedtest-tracker:dev-arm",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/speedtest-tracker.png",
			"name": "speedtest-tracker",
			"platform": "linux",
			"ports": [
				"8765:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Speedtest Tracker",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/speedtest-tracker",
					"container": "/config"
				}
			],
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker</a><br><br><br>"
		},
		{
			"categories": [
				"Other"
			],
			"description": "A free, self-hostable rss aggregator…",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/freshrss:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/freshrss-icon.png",
			"name": "freshrss",
			"platform": "linux",
			"ports": [
				"8132:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "FreshRSS",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/freshrss",
					"container": "/config"
				}
			],
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.freshrss.org/\" target=\"_blank\">https://www.freshrss.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/FreshRSS/FreshRSS/tree/edge/Docker\" target=\"_blank\">https://github.com/FreshRSS/FreshRSS/tree/edge/Docker</a><br><br><br>"
		},
		{
			"categories": [
				"Other"
			],
			"description": "Telegram Messaging App",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "Europe/Madrid",
					"description": "Specify a timezone to use for example Europe/Madrid",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "xorilog/telegram",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/freshrss-icon.png",
			"name": "Telegram",
			"platform": "linux",
			"ports": [
				"8155:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Telegram",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/telegram-cli",
					"container": "/config"
				},
				{
					"bind": "/portainer/Movies",
					"container": "/Downloads"
				}
			],
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/k00unal/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.telegram.org/\" target=\"_blank\">https://www.telegram.org.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/ugeek/telegram-cli\" target=\"_blank\">https://hub.docker.com/r/ugeek/telegram-cli</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Web File Browser which can be used as a middleware or standalone app.",
			"image": "80x86/filebrowser:latest",
			"logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/filebrowser.png",
			"name": "filebrowser",
			"note": "The default user and password is admin/admin.",
			"platform": "linux",
			"ports": [
				"8082:8082/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "FileBrowser",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/FileBrowser",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config",
					"container": "/myfiles"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
			"image": "pihole/pihole:latest",
			"logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/pihole.png",
			"name": "pihole",
			"note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article \u003ca href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'\u003ehere\u003c/a\u003e if you run into issues binding to port 53.",
			"platform": "linux",
			"ports": [
				"53:53/tcp",
				"53:53/udp",
				"67:67/udp",
				"1010:80/tcp",
				"4443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Pi-Hole",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/PiHole",
					"container": "/etc/pihole"
				},
				{
					"bind": "/portainer/Files/AppData/Config/PiHole/DNS",
					"container": "/etc/dnsmasq.d"
				}
			]
		},
		{
			"categories": [
				"Productivity"
			],
			"description": "[LibreOffice](https://www.libreoffice.org/) is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.",
			"env": [
				{
					"default": "1024",
					"description": "for GroupID",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "100",
					"description": "for UserID",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "Europe/Amsterdam",
					"description": "Specify a timezone to use for example Europe/Amsterdam",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "linuxserver/libreoffice:latest",
			"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png",
			"name": "Libreoffice",
			"note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/libreoffice/config</p>",
			"platform": "linux",
			"ports": [
				"3200:3000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Libreoffice",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/libreoffice/config",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Video",
				"Music",
				"Photos"
			],
			"description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "100",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "linuxserver/jellyfin:latest",
			"logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/jellyfin.png",
			"name": "jellyfin",
			"platform": "linux",
			"ports": [
				"8096:8096/tcp",
				"8920:8920/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Jellyfin",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Jellyfin",
					"container": "/config"
				},
				{
					"bind": "/portainer/TV",
					"container": "/data/tvshows"
				},
				{
					"bind": "/portainer/Movies",
					"container": "/data/movies"
				}
			]
		},
		{
			"type": "container",
			"title": "Httpd",
			"description": "Open-source HTTP server",
			"categories": [
				"webserver"
			],
			"platform": "linux",
			"logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
			"image": "httpd:latest",
			"ports": [
				"80/tcp"
			],
			"volumes": [
				"portainer/Files/AppData/Config/apache2/htdocs/"
			]
		},
		{
			"categories": [
				"Backup",
				"Cloud",
				"Other",
				"Tools"
			],
			"description": null,
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "100",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/syncthing:latest",
			"logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/syncthing-icon.png",
			"name": "syncthing",
			"platform": "linux",
			"ports": [
				"8384:8384/tcp",
				"21027:21027/udp",
				"22000:22000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "SyncThing",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Syncthing",
					"container": "/config"
				},
				{
					"container": "/sync"
				}
			]
		},
		{
			"categories": [
				"DNS",
				"Tools"
			],
			"description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.\r\n\r\nFirst, go to duckdns site, register your subdomain and retrieve your token\r\nThen run the docker create command above with your subdomain(s) and token\r\nIt will update your IP with the DuckDNS service every 5 minutes\r\n\r\n",
			"env": [
				{
					"label": "SUBDOMAINS",
					"name": "SUBDOMAINS",
					"set": ""
				},
				{
					"label": "TOKEN",
					"name": "TOKEN",
					"set": ""
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "100",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/duckdns:latest",
			"logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/duckdns.png",
			"name": "duckdns",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Duck DNS",
			"type": 1
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "100",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/transmission:latest",
			"logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/transmission-icon.png",
			"name": "transmission",
			"platform": "linux",
			"ports": [
				"9091:9091/tcp",
				"51413:51413/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Transmission",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Transmission",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/Downloads",
					"container": "/downloads"
				},
				{
					"container": "/watch"
				}
			]
		},
		{
			"type": 1,
			"title": "Nginx",
			"description": "High performance web server",
			"categories": [
				"webserver"
			],
			"platform": "linux",
			"logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
			"image": "nginx:latest",
			"ports": [
				"80/tcp",
				"443/tcp"
			],
			"volumes": [
				{
					"container": "/etc/nginx"
				},
				{
					"container": "/usr/share/nginx/html"
				}
			]
		},
		{
			"categories": [
				"Web",
				"Proxy"
			],
			"description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "100",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/nginx:latest",
			"logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/nginx-icon.png",
			"name": "nginx",
			"platform": "linux",
			"ports": [
				"80/tcp",
				"443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Nginx",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Nginx",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Proxy",
				"Tools"
			],
			"description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
			"image": "jc21/nginx-proxy-manager",
			"logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/proxy_mgr.png",
			"name": "nginx-proxy-manager",
			"platform": "linux",
			"env": [
				{
					"label": "DB_SQLITE_FILE",
					"name": "DB_SQLITE_FILE",
					"default": "/data/database.sqlite"
				}
			],
			"ports": [
				"80:8080/tcp",
				"81:8181/tcp",
				"443:4443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Nginx Proxy Manager",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Nginx-Proxy/data",
					"container": "/data"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Nginx-Proxy/letsencrypt",
					"container": "/etc/letsencrypt"
				}
			]
		},
		{
			"categories": [
				"Tools",
				"Web"
			],
			"description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd \u0026lt;username\u0026gt;",
			"env": [
				{
					"label": "EMAIL",
					"name": "EMAIL",
					"set": "-Xms256m -Xmx512m"
				},
				{
					"label": "URL",
					"name": "URL",
					"set": "-Xms256m -Xmx512m"
				},
				{
					"label": "SUBDOMAINS",
					"name": "SUBDOMAINS",
					"set": "www,"
				},
				{
					"label": "ONLY_SUBDOMAINS",
					"name": "ONLY_SUBDOMAINS",
					"set": "false"
				},
				{
					"label": "DHLEVEL",
					"name": "DHLEVEL",
					"set": "2048"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "100",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"label": "VALIDATION",
					"name": "VALIDATION",
					"set": "http"
				},
				{
					"label": "DNSPLUGIN",
					"name": "DNSPLUGIN",
					"set": "http"
				}
			],
			"image": "linuxserver/swag:latest",
			"logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/letsencrypt.png",
			"name": "letsencrypt / SWAG",
			"platform": "linux",
			"ports": [
				"80/tcp",
				"443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Let's Encrypt / SWAG",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/LetsEncrypt",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"WordPress",
				"Web"
			],
			"description": "Wordpress setup with a MySQL database",
			"env": [
				{
					"default": "5080",
					"label": "External Port for webserver forward to port 80",
					"name": "WEB_SERVER_PORT"
				},
				{
					"default": "wordpress",
					"label": "Database user name",
					"name": "MYSQL_DATABASE_USER_NAME"
				},
				{
					"label": "Database password for user",
					"name": "MYSQL_DATABASE_PASSWORD"
				},
				{
					"label": "Database root password",
					"name": "MYSQL_DATABASE_ROOT_PASSWORD"
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/wordpress.png",
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://wordpress.com/\" target=\"_blank\">https://wordpress.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/docker-library/docs/tree/master/wordpress#-via-docker-stack-deploy-or-docker-compose\" target=\"_blank\">https://github.com/docker-library/docs/tree/master/wordpress#-via-docker-stack-deploy-or-docker-compose</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/wordpress_installation.md\" target=\"_blank\">wordpress_installation.md</a><br><br><br>Deploys a Wordpress instance connected to a MySQL database.",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/wordpress-stack.yml",
				"url": "https://github.com/k00unal/pi-hosted"
			},
			"title": "Wordpress",
			"type": 3
		},
		{
			"categories": [
				"Cloud",
				"Web",
				"Management",
				"Photos"
			],
			"description": "Lychee With Mariadb is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"default": "lychee",
					"label": "DATABASE_NAME",
					"name": "DATABASE_NAME"
				},
				{
					"default": "lychee",
					"label": "DATABASE_USER",
					"name": "DATABASE_USER"
				},
				{
					"default": "",
					"label": "DATABASE_PASSWORD",
					"name": "DATABASE_PASSWORD"
				},
				{
					"default": "",
					"label": "MYSQL_ROOT_PASSWORD",
					"name": "MYSQL_ROOT_PASSWORD"
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/lychee-icon.png",
			"name": "lychee-mariadb",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/lychee-mariadb.yml",
				"url": "https://github.com/pi-hosted/pi-hosted/"
			},
			"restart_policy": "unless-stopped",
			"title": "Lychee With Mariadb",
			"type": 3,
			"note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://lycheeorg.github.io/\" target=\"_blank\">https://lycheeorg.github.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-lychee\" target=\"_blank\">https://docs.linuxserver.io/images/docker-lychee</a><br><br><br>"
		}
	]
}